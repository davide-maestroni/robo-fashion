/**
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
apply plugin: 'android-library'

android {
    compileSdkVersion 19
    buildToolsVersion "19.0.3"

    defaultConfig {
        minSdkVersion 8
        targetSdkVersion 19
        versionCode 1
        versionName "1.0"

        testPackageName "com.bmd.android.collection.test"
    }
    buildTypes {
        release {
            runProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }
}

dependencies {
    compile 'com.android.support:support-v4:+'
    compile fileTree(dir: 'libs', include: ['*.jar'])

    androidTestCompile 'com.squareup:fest-android:1.0.7'
}

android.libraryVariants.all { variant ->

    task("generate${capitalize(variant.name)}Javadoc", type: Javadoc) {
        title = "$name $version API"
        description "Generates Javadoc for Build '$variant.name'."
        source = variant.javaCompile.source
        ext.androidJar =
                "${android.plugin.sdkDirectory}/platforms/${android.compileSdkVersion}/android.jar"
        classpath = files(variant.javaCompile.classpath.files) + files(ext.androidJar)
        options.links("http://docs.oracle.com/javase/7/docs/api/")
        options.linksOffline("http://developer.android.com/reference/", "${android.plugin.sdkDirectory}/docs/reference/")
        exclude '**/BuildConfig.java'
        exclude '**/R.java'
    }

}

def capitalize(name) {

    def capitalized = name.toLowerCase()
    capitalized = capitalized.replaceFirst(capitalized[0], capitalized[0].toUpperCase());

    return capitalized
}